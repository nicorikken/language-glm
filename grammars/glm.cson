name: "GridLAB-D"
scopeName: "source.glm"
fileTypes: [
  "glm"
]
maxTokensPerLine: 100
patterns: [
  # {
  #  include: "#comments"
  # }
  {
    # TODO: gradually replace this language import
    include: "source.c"
  }
  {
    include: "#clock"
  }
  {
    include: "#objects"
  }
  {
    include: "#modules"
  }
  {
    include: "#preprocessors"
  }
]
repository:
  clock:
    # clock {
    # clock{
    patterns: [
      {
        name: "clock.gridlab-d"
        # begin: "(?<=^|\\s)(clock)\\s*((?<=\\s)[^\\{\\s]*)?\\s*\\{"
        begin: "(?<=^|\\s)(clock)\\s*(?:(?<=\\s)([^\\{\\s:]*)(?::(\\d*))?)?\\s*\\{"
        beginCaptures:
          1: name: "type.clock.gridlab-d"
          2: name: "definition.clock.gridlab-d"
          3: name: "entity.name.clock.gridlab-d"
        end: "}"
        patterns: [
          {
            include: "#clock-properties"
            #include: "#generic-properties"
          }
        ]
      }
    ]
  "clock-properties":
    patterns: [
      {
        name: "clock.property.gridlab-d"
        match: "(?<=^|\\s)(timezone|timestamp|stoptime)\\s+([^;]*)(?=\\s*;)"
        captures:
          1: name: "type.clock.property.gridlab-d"
          2: name: "value.clock.property.gridlab-d"
      }
    ]
  modules:
    patterns: [
      {
        # single line module definition
        # module name;
        name: "module.gridlab-d"
        match: "(?<=^|\\s)(module)\\s+([^;\\s]*)(?=\\s*;)"
        captures:
          1: name: "type.module.gridlab-d"
          2: name: "definition.module.gridlab-d"
      }
      {
        # multie line module definition
        # module name {
        #   variable value;
        #   // ...
        # }
        name: "module.gridlab-d"
        begin: "(?<=^|\\s)(module)\\s+([^\\{\\s]*)\\s*\\{"
        beginCaptures:
          1: name: "type.module.gridlab-d"
          2: name: "definition.module.gridlab-d"
        end: "}"
        # TODO: include module property patterns
        # patterns: []
      }
    ]
  objects:
    # http://gridlab-d.sourceforge.net/wiki/index.php/Object_%28directive%29
    # object definitions: single, with id, or multiple-numbered
    # object line_configuration {
    # object line_configuration:id {
    # object line_configuration:from..to {
    # object line_configuration:..count {
    patterns: [
      {
        name: "object.gridlab-d"
        # begin: "(?<=^|\\s)(object)\\s+([^\\{\\s]*)\\s*\\{"
        begin: "(?<=^|\\s)(object)\\s*(?:(?<=\\s)([^\\{\\s:]*)(?::(\\d*))?)?\\s*\\{?"
        beginCaptures:
          1: name: "storage.type.object.gridlab-d"
          # 1: name: "type.object.gridlab-d"
          # 2: name: "definition.object.gridlab-d"
          2: name: "entity.name.function.object.gridlab-d"
          #3: name: "id.object.gridlab-d"
          3: name: "constant.id.object.gridlab-d"
        end: "}"
        patterns: [
          {
            include: "#objects"
          }
          {
            # include: "#object-properties"
            include: "#generic-properties"
          }
        ]
      }
    ]
  "object-properties":
    patterns: [
      {
        name: "object.property.gridlab-d"
        match: "(?<=^|\\s)(name|id|groupid|parent|rank|schedule_skew|latitude|longitude|in|out|heartbeat|tmyfile|file|filename|reader|interval|limit)\\s+([^;\\s]*)(?=\\s*;)"
        captures:
          1: name: "type.object.property.gridlab-d"
          2: name: "value.object.property.gridlab-d"
      }
    ]
  "preprocessors":
    patterns: [
      {
        # #set profiler=1
        name: "definition.gridlab-d"
        match: "(?<=^|;)(#set)\\s+([^\\s;=]*)=([^;]*)(?=\\s|$|;)"
        captures:
          1: name: "keyword.preprocessor.gridlab-d"
          2: name: "name.preprocessor.gridlab-d"
          3: name: "constant.preprocessor.gridlab-d"
      }
    ]
  "generic-properties":
    patterns: [
      {
        name: "property.gridlab-d"
        # match: "(?<=^|\\s)(\\w*)\\s+([^;]*)(?=\\s*;)"
        match: "(?<=^|;)\\s*([^\\s;]*)\\s+([^;]*)(?=\\s*;)"
        captures:
          1: name: "type.property.gridlab-d"
          2: name: "value.property.gridlab-d"
      }
    ]
  "comments":
    # selectively copied from https://github.com/atom/language-c/blob/master/grammars/c.cson L344+
    "patterns": [
      {
        'begin': '/\\*'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.comment.begin.gridlab-d'
        'end': '\\*/'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.comment.end.gridlab-d'
        'name': 'comment.block.gridlab-d'
      }
      {
        'match': '\\*/.*\\n'
        'name': 'invalid.illegal.stray-comment-end.gridlab-d'
      }
      {
        'begin': '(^[ \\t]+)?(?=//)'
        'beginCaptures':
          '1':
            'name': 'punctuation.whitespace.comment.leading.gridlab-d'
        'end': '(?!\\G)'
        'patterns': [
          {
            'begin': '//'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.comment.gridlab-d'
            'end': '\\n'
            'name': 'comment.line.double-slash.gridlab-d'
            'patterns': [
              {
                'include': '#line_continuation_character'
              }
            ]
          }
        ]
      }
    ]
  'line_continuation_character':
    # copied from https://github.com/atom/language-c/blob/master/grammars/c.cson L417+
    'patterns': [
      {
        'match': '(\\\\)\\s*\\n'
        'captures':
          '1':
            'name': 'constant.character.escape.line-continuation.gridlab-d'
      }
    ]
