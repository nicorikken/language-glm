// Examples for module market

// class auction
object auction:0 {

	// header properties
	rank 0;
	clock (invalid);
	flags NONE;
	// auction properties
	unit "";
	period +300 s;
	latency +0 s;
	market_id 0;
	network "";
	verbose FALSE;
	linkref "";
	pricecap +9999;
	price_cap +9999;
	special_mode NONE;
	statistic_mode ON;
	fixed_price +0;
	fixed_quantity +0;
	capacity_reference_object "";
	capacity_reference_property "";
	capacity_reference_bid_price +0;
	max_capacity_reference_bid_quantity +0;
	capacity_reference_bid_quantity +0;
	init_price +0;
	init_stdev +0;
	future_mean_price +0;
	use_future_mean_price FALSE;
	current_market.start_time 'INIT';
	current_market.end_time 'INIT';
	current_market.clearing_price +0 $;
	current_market.clearing_quantity +0;
	current_market.clearing_type NULL;
	current_market.marginal_quantity_load +0;
	current_market.marginal_quantity +0;
	current_market.marginal_quantity_bid +0;
	current_market.marginal_quantity_frac +0;
	current_market.seller_total_quantity +0;
	current_market.buyer_total_quantity +0;
	current_market.seller_min_price +0;
	current_market.buyer_total_unrep +0;
	current_market.cap_ref_unrep +0;
	next_market.start_time 'INIT';
	next_market.end_time 'INIT';
	next_market.clearing_price +0 $;
	next_market.clearing_quantity +0;
	next_market.clearing_type NULL;
	next_market.marginal_quantity_load +0;
	next_market.marginal_quantity_bid +0;
	next_market.marginal_quantity_frac +0;
	next_market.seller_total_quantity +0;
	next_market.buyer_total_quantity +0;
	next_market.seller_min_price +0;
	next_market.cap_ref_unrep +0;
	past_market.start_time 'INIT';
	past_market.end_time 'INIT';
	past_market.clearing_price +0 $;
	past_market.clearing_quantity +0;
	past_market.clearing_type NULL;
	past_market.marginal_quantity_load +0;
	past_market.marginal_quantity_bid +0;
	past_market.marginal_quantity_frac +0;
	past_market.seller_total_quantity +0;
	past_market.buyer_total_quantity +0;
	past_market.seller_min_price +0;
	past_market.cap_ref_unrep +0;
	margin_mode NORMAL;
	warmup 0;
	ignore_failed_market FALSE;
	ignore_pricecap FALSE;
	transaction_log_file "";
	transaction_log_limit 0;
	curve_log_file "";
	curve_log_limit 0;
	curve_log_info NORMAL;
}


// class controller
object controller:0 {

	// header properties
	rank 0;
	clock (invalid);
	flags NONE;
	// controller properties
	simple_mode NONE;
	bid_mode OFF;
	use_override OFF;
	ramp_low +0 degF;
	ramp_high +0 degF;
	range_low +0;
	range_high +0;
	target "";
	setpoint "";
	demand "";
	load "";
	total "";
	market "";
	state "";
	avg_target "";
	std_target "";
	bid_price +0;
	bid_quantity +0;
	set_temp +0 degF;
	base_setpoint +0 degF;
	market_price +0;
	period +0 s;
	control_mode RAMP;
	resolve_mode DEADBAND;
	slider_setting +0;
	slider_setting_heat +0;
	slider_setting_cool +0;
	override "";
	heating_range_high +0 degF;
	heating_range_low +0 degF;
	heating_ramp_high +0;
	heating_ramp_low +0;
	cooling_range_high +0 degF;
	cooling_range_low +0 degF;
	cooling_ramp_high +0;
	cooling_ramp_low +0;
	heating_base_setpoint +0 degF;
	cooling_base_setpoint +0 degF;
	deadband "";
	heating_setpoint "";
	heating_demand "";
	cooling_setpoint "";
	cooling_demand "";
	sliding_time_delay +0 s;
	use_predictive_bidding FALSE;
	device_actively_engaged +0;
	cleared_market 0;
	locked 0;
	p_ON +0;
	p_OFF +0;
	p_ONLOCK +0;
	p_OFFLOCK +0;
	delta_u +0;
	regulation_market_on "";
	regulation_market_off "";
	fast_regulation_signal +0 s;
	market_price_on +0;
	market_price_off +0;
	period_on +0 s;
	period_off +0 s;
	regulation_period 0;
	r1 +0;
	mu0 +0;
	mu1 +0;
	average_target "";
	standard_deviation_target "";
	bid_id 0;
	bid_delay 0;
	thermostat_state "";
	proxy_average +0;
	proxy_standard_deviation +0;
	proxy_market_id 0;
	proxy_market2_id 0;
	proxy_clear_price +0 $;
	proxy_price_cap +0;
	proxy_market_unit "";
	proxy_initial_price +0;
}


// class double_controller
object double_controller:0 {

	// header properties
	rank 0;
	clock (invalid);
	flags NONE;
	// double_controller properties
	thermostat_mode INVALID;
	last_mode INVALID;
	resolve_mode NONE;
	setup_mode NONE;
	bid_mode OFF;
	last_mode_timer 0;
	cool_ramp_low +0;
	cool_ramp_high +0;
	cool_range_low +0;
	cool_range_high +0;
	cool_set_base +0;
	cool_setpoint +0;
	heat_ramp_low +0;
	heat_ramp_high +0;
	heat_range_low +0;
	heat_range_high +0;
	heat_set_base +0;
	heat_setpoint +0;
	temperature_name "";
	cool_setpoint_name "";
	cool_demand_name "";
	heat_setpoint_name "";
	heat_demand_name "";
	load_name "";
	total_load_name "";
	deadband_name "";
	state_name "";
	market "";
	market_period +0;
	bid_price +0;
	bid_quant +0;
	load "";
	total "";
	last_price +0;
	temperature +0;
	cool_bid +0;
	heat_bid +0;
	cool_demand +0;
	heat_demand +0;
	price +0;
	avg_price +0;
	stdev_price +0;
}


// class generator_controller
object generator_controller:0 {

	// header properties
	rank 0;
	clock (invalid);
	flags NONE;
	// generator_controller properties
	generator_state OFF;
	amortization_type EXPONENTIAL;
	generator_state_number 0;
	market "";
	bid_curve "";
	bid_curve_file "";
	bid_generator_rating +0 VA;
	update_curve FALSE;
	is_marginal_gen FALSE;
	generator_rating +0 VA;
	generator_output +0;
	input_unit_base +0 MW;
	startup_cost +0 $;
	shutdown_cost +0 $;
	minimum_runtime +0 s;
	minimum_downtime +0 s;
	capacity_factor +0;
	amortization_factor +0 1/s;
	bid_delay +0;
	generator_attachment STANDALONE;
	building_load_curr +0;
	building_load_bid +0;
	year_runtime_limit +0 h;
	current_year_runtime +0 h;
	runtime_year_end "";
	scaling_factor +0 unit;
	license_premium +0;
	hours_in_year +0 h;
	op_and_maint_cost +0 $;
	bid_id 0;
}


// class passive_controller
object passive_controller:0 {

	// header properties
	rank 0;
	clock (invalid);
	flags NONE;
	// passive_controller properties
	input_state 0;
	input_setpoint +0;
	input_chained FALSE;
	observation +0;
	mean_observation +0;
	stdev_observation +0;
	expectation +0;
	sensitivity +0;
	period +0 s;
	expectation_prop "";
	expectation_obj "";
	expectation_property "";
	expectation_object "";
	setpoint_prop "";
	setpoint "";
	state_prop "";
	state_property "";
	observation_obj "";
	observation_prop "";
	observation_object "";
	observation_property "";
	mean_observation_prop "";
	stdev_observation_prop "";
	stdev_observation_property "";
	cycle_length 0;
	base_setpoint +0;
	critical_day +0;
	two_tier_cpp FALSE;
	daily_elasticity +0;
	sub_elasticity_first_second +0;
	sub_elasticity_first_third +0;
	second_tier_hours 0;
	third_tier_hours 0;
	first_tier_hours 0;
	first_tier_price +0;
	second_tier_price +0;
	third_tier_price +0;
	old_first_tier_price +0;
	old_second_tier_price +0;
	old_third_tier_price +0;
	Percent_change_in_price +0;
	Percent_change_in_peakoffpeak_ratio +0;
	Percent_change_in_Criticalpeakoffpeak_ratio +0;
	linearize_elasticity FALSE;
	price_offset +0;
	pool_pump_model FALSE;
	base_duty_cycle +0;
	trigger_time_under_frequency 0;
	trigger_time_over_frequency 0;
	release_time_under_frequency 0;
	release_time_over_frequency 0;
	release_point_under_frequency +0;
	release_point_over_frequency +0;
	trigger_point_under_frequency +0;
	trigger_point_over_frequency +0;
	frequency +0;
	PFC_mode OVER_FREQUENCY;
	PFC_state FREE;
	state_observed "";
	power_observed "";
	output_observed 0;
	bid_delay 0;
	voltage_lockout +0 %;
	voltage_lockout_time +0 s;
	voltage_lockout_state 0;
	distribution_type NORMAL;
	comfort_level +0;
	range_high +0;
	range_low +0;
	ramp_high +0;
	ramp_low +0;
	prob_off +0;
	output_state 0;
	output_setpoint +0;
	control_mode NONE;
	dlc_mode OFF;
	cycle_length_off +0 s;
	cycle_length_on +0 s;
}


// class stub_bidder
object stub_bidder:0 {

	// header properties
	rank 0;
	clock (invalid);
	flags NONE;
	// stub_bidder properties
	bid_period +0 s;
	count 0;
	market "";
	role BUYER;
	price +0;
	quantity +0;
	bid_id 0;
}


// class stubauction
object stubauction:0 {

	// header properties
	rank 0;
	clock (invalid);
	flags NONE;
	// stubauction properties
	unit "";
	period +300 s;
	last.P +0;
	current_market.clearing_price +0;
	past_market.clearing_price +0;
	next.P +0;
	avg24 +0;
	std24 +0;
	avg72 +0;
	std72 +0;
	avg168 +0;
	std168 +0;
	market_id 0;
	verbose FALSE;
	control_mode NORMAL;
}

Processing 2001-03-11 17:35:00 UTC...
// class supervisory_control
object supervisory_control:0 {

	// header properties
	rank 0;
	clock (invalid);
	flags NONE;
	// supervisory_control properties
	unit "";
	period +300 s;
	market_id 0;
	nominal_frequency +0 Hz;
	droop +0 %;
	frequency_deadband +0.015 Hz;
	PFC_mode OVER_FREQUENCY;
	bid_sort_mode NONE;
}

Processing 2001-05-09 03:00:00 UTC...